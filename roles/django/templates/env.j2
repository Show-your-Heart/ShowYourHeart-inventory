################################################################################
#                        General project variables                             #
################################################################################

# https://docs.djangoproject.com/en/4.2/ref/settings/#debug
# Determines whether Django will run on debug mode or not. Remember to set it
# to false in production.
DEBUG={{ django_debug_var }}

# https://docs.djangoproject.com/en/4.2/ref/settings/#std-setting-SECRET_KEY
# You should generate a random string for this value in production.
SECRET_KEY={{ django_secret_key }}

# https://docs.djangoproject.com/en/4.2/ref/settings/#allowed-hosts
# A comma separated list of allowed hosts. In production this should be the
# domain name, such as "www.esguard.com,esguard.com".
ALLOWED_HOSTS="*"
#ALLOWED_HOSTS={{ inventory_hostname }}

# https://docs.djangoproject.com/en/4.2/ref/settings/#csrf-trusted-origins
# A list of trusted origins for unsafe requests (e.g. POST).
CSRF_TRUSTED_ORIGINS=https://showyourheart-test.devs.coop

# Custom env variable. Allows the project to access the absolute root URL.
ABSOLUTE_URL=http://localhost:1601

# To enable or disable maintenance mode from the `django-maintenance-mode`
# package.
# https://github.com/fabiocaccamo/django-maintenance-mode
MAINTENANCE_MODE=false

# This is used as a starting value for the extra-settings PROJECT_NAME variable.
PROJECT_NAME=Show your heart

################################################################################
#                          Database variables                                  #
################################################################################

# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
# Postgres uses DB_USER and DB_PASSWORD for its default database.
DB_USER={{ db_user }}
DB_PASSWORD={{ db_password }}
DB_NAME={{ db_name }}
DB_HOST=showyourheart-db
#DB_PORT=5432

################################################################################
#                                   Email                                      #
################################################################################

# By default uses the Post Office's backend. If changed to one of Django's
# backend, remember to set the EMAIL_* variables down below.
# We use Post Office mostly to delegate the tasks to Celery, so be sure to
# configure that too.
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# The SendgridBackend can be used for both development and production. See
# the Sendgrid options down below.
#
# In case you're not using Sendgrid, you'll want to use Django's SMTP backend
# for production and the console (or one of the other built-in) backend.
# POST_OFFICE_DEFAULT_BACKEND=sendgrid_backend.SendgridBackend
POST_OFFICE_DEFAULT_BACKEND=django.core.mail.backends.console.EmailBackend
POST_OFFICE_DEFAULT_BACKEND=django.core.mail.backends.smtp.EmailBackend

# Post Office uses this as a default for the `sender` argument in the `send`
# method.
DEFAULT_FROM_EMAIL=devtesting@coopdevs.org

# For debugging purposes: overrides the recipients of all messages sent through
# Post Office. This might be useful for development, when we don't want to
# mistakenly send any emails to actual addresses.
POST_OFFICE_OVERRIDE_RECIPIENTS=["devtesting@coopdevs.org"]

# Priority: 'now': emails sent immediately. 'medium': emails handled by Celery.
POST_OFFICE_DEFAULT_PRIORITY=now

# Set this to the sender's domain
POST_OFFICE_MESSAGE_ID_FQDN=coopdevs.org

# Set whether Post Office should use Celery as a task manager.
POST_OFFICE_CELERY_ENABLED=false

# Sendgrid is the default mail service for this project. To create a new API
# key, visit https://app.sendgrid.com/settings/api_keys
# SENDGRID_API_KEY=

# If set to true, Sendgrid will confirm that the message would've been sent
# normally but will not actually send it.
SENDGRID_SANDBOX_MODE_IN_DEBUG=true

# For debugging purposes. Will send the message to stdout. If set while using
# Celery, you'll find the printed email on the Celery container logs.
#
# ATTENTION: setting this to true *does not stop* Sendgrid from sending the
# messages. For that, use the sandbox variable.
SENDGRID_ECHO_TO_STDOUT=true

# The `django-sendgrid-v5` package uses Sendgrid's Web API instead of SMTP
# as the transport mechanism, thus, these variables don't need to be set.
#
# Set only if you want to use SMTP as a transport mechanism for Sendgrid or
# want to set up another SMTP service (or your own).
EMAIL_HOST=smtp.postmarkapp.com
EMAIL_PORT=587
EMAIL_HOST_USER={{ django_email_host_user }}
EMAIL_HOST_PASSWORD={{ django_email_host_password }}
EMAIL_USE_TLS=true
#EMAIL_USE_SSL=false

################################################################################
#                               Media / Storage                                #
################################################################################

AWS_ACCESS_KEY_ID={{ hetzner_access_key }}
AWS_SECRET_ACCESS_KEY= {{ hetzner_secret_key }}
AWS_STORAGE_BUCKET_NAME=showyourheart
AWS_S3_ENDPOINT_URL=https://nbg1.hetzner.objects.cdn.cloudflare.net
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=86400',
}

AWS_S3_FILE_OVERWRITE = False  # Don't overwrite files with same name
AWS_DEFAULT_ACL = None         # Recommended for most use cases
AWS_QUERYSTRING_AUTH = False   # If you want publicly accessible URLs

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'src/static'),
]
STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

WHITENOISE_BACKEND="whitenoise.storage.StaticFilesStorage"
WHITENOISE_AUTOREFRESH=true

################################################################################
#                               Selenium setup                                 #
################################################################################
APP_HOST_NAME=showyourheart-app
SELENIUM_HOST_NAME=showyourheart-selenium

################################################################################
#                       Initial superuser and dev data                         #
################################################################################
USER_ADMIN_EMAIL={{ django_user_admin_email }}
USER_ADMIN_PASSWORD={{ django_user_admin_password }}
# If set, these will make the initial migration to create a superuser. Make sure
# to never leave the superuser account with the password unchanged if you use
# this. Check the related migration and management command for more info.
SUPERUSER_EMAIL={{ django_superuser_email }}
SUPERUSER_PASSWORD={{ django_superuser_password }}
USER_GOV_ADMIN_EMAIL={{ django_user_gov_admin_email }}
USER_GOV_ADMIN_PASSWORD={{ django_user_gov_admin_password }}